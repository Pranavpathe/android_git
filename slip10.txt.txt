1)
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" 
    xmlns:tools="http://schemas.android.com/tools" 
    android:layout_width="match_parent" 
    android:layout_height="match_parent" 
    tools:context=".MainActivity"> 
 
    <Switch 
        android:id="@+id/switchButton" 
        android:layout_width="wrap_content" 
        android:layout_height="wrap_content" 
        android:text="Switch" 
        android:layout_marginTop="50dp" 
        android:layout_centerHorizontal="true"/> 
 
    <ToggleButton 
        android:id="@+id/toggleButton" 
        android:layout_width="wrap_content" 
        android:layout_height="wrap_content" 
        android:textOff="Off" 
        android:textOn="On" 
        android:layout_below="@id/switchButton" 
        android:layout_marginTop="20dp" 
        android:layout_centerHorizontal="true"/> 
 
</RelativeLayout> 


package com.example.activitylifecycle; 
import android.os.Bundle; 
import android.widget.CompoundButton; 
import android.widget.Switch; 
import android.widget.Toast; 
import android.widget.ToggleButton; 
 
import androidx.appcompat.app.AppCompatActivity; 
 
public class MainActivity extends AppCompatActivity { 
 
    private Switch switchButton; 
    private ToggleButton toggleButton; 
 
    @Override 
    protected void onCreate(Bundle savedInstanceState) { 
        super.onCreate(savedInstanceState); 
        setContentView(R.layout.activity_main); 
 
        switchButton = findViewById(R.id.switchButton); 
        toggleButton = findViewById(R.id.toggleButton); 
 
        switchButton.setOnCheckedChangeListener(new 
CompoundButton.OnCheckedChangeListener() { 
            @Override 
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) 
{ 
                if (isChecked) { 
                    // Switch is ON 
                    Toast.makeText(MainActivity.this, "Switch is ON", 
Toast.LENGTH_SHORT).show(); 
                } else { 
                    // Switch is OFF 
                    Toast.makeText(MainActivity.this, "Switch is OFF", 
Toast.LENGTH_SHORT).show(); 
                } 
            } 
        }); 
 
        toggleButton.setOnCheckedChangeListener(new 
CompoundButton.OnCheckedChangeListener() { 
            @Override 
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) 
{ 
                if (isChecked) { 
                    // ToggleButton is ON 
                    Toast.makeText(MainActivity.this, "ToggleButton is ON", 
Toast.LENGTH_SHORT).show(); 
                } else { 
                    // ToggleButton is OFF 
                    Toast.makeText(MainActivity.this, "ToggleButton is OFF", 
Toast.LENGTH_SHORT).show(); 
                } 
            } 
        }); 
    } 
} 



SLIP10_Q2
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
    <ListView
        android:id="@+id/listView"
        android:layout_width="match_parent"
        android:layout_height="match_parent"/>
</RelativeLayout>

//Java file
package com.example.slip10_2;
import android.os.Bundle;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
    private ListView listView;
    private String[] fruits = {"Apple", "Banana", "Orange", "Grape", "Mango"};
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        listView = findViewById(R.id.listView);
        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, fruits);
        listView.setAdapter(adapter);
    }           }

